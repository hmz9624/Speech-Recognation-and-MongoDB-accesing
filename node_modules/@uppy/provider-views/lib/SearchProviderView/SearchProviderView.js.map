{"version":3,"sources":["SearchProviderView.js"],"names":["h","require","SearchInput","Browser","LoaderView","Header","CloseWrapper","View","module","exports","SearchProviderView","constructor","plugin","opts","defaultOptions","viewType","showTitles","showFilter","showBreadcrumbs","search","bind","triggerSearchInput","addFile","handleScroll","donePicking","render","setPluginState","isInputMode","files","folders","directories","filterInput","isSearchVisible","currentSelection","tearDown","query","sharedHandler","loaderWrapper","provider","res","handleError","event","nextPageQuery","shouldHandleScroll","isHandlingScroll","response","getPluginState","error","promises","map","file","Promise","all","clearSelection","state","viewOptions","didFirstRender","preFirstRender","targetViewOptions","loading","isChecked","toggleCheckbox","filterItems","hasInput","browserProps","done","cancel","cancelPicking","headerComponent","i18n","uppy","title","pluginIcon","icon","uppyFiles","getFiles","validateRestrictions","VERSION","searchedFor","items","forEach","item","push"],"mappings":"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","sourcesContent":["const { h } = require('preact')\nconst SearchInput = require('./InputView')\nconst Browser = require('../Browser')\nconst LoaderView = require('../Loader')\nconst Header = require('./Header')\nconst CloseWrapper = require('../CloseWrapper')\nconst View = require('../View')\n\n/**\n * Class to easily generate generic views for Provider plugins\n */\nmodule.exports = class SearchProviderView extends View {\n  static VERSION = require('../../package.json').version\n\n  #searchTerm\n\n  /**\n   * @param {object} plugin instance of the plugin\n   * @param {object} opts\n   */\n  constructor (plugin, opts) {\n    super(plugin, opts)\n\n    // set default options\n    const defaultOptions = {\n      viewType: 'grid',\n      showTitles: false,\n      showFilter: false,\n      showBreadcrumbs: false,\n    }\n\n    // merge default options with the ones set by user\n    this.opts = { ...defaultOptions, ...opts }\n\n    // Logic\n    this.search = this.search.bind(this)\n    this.triggerSearchInput = this.triggerSearchInput.bind(this)\n    this.addFile = this.addFile.bind(this)\n    this.handleScroll = this.handleScroll.bind(this)\n    this.donePicking = this.donePicking.bind(this)\n\n    // Visual\n    this.render = this.render.bind(this)\n\n    // Set default state for the plugin\n    this.plugin.setPluginState({\n      isInputMode: true,\n      files: [],\n      folders: [],\n      directories: [],\n      filterInput: '',\n      isSearchVisible: false,\n      currentSelection: [],\n    })\n  }\n\n  tearDown () {\n    // Nothing.\n  }\n\n  #updateFilesAndInputMode (res, files) {\n    this.nextPageQuery = res.nextPageQuery\n    this.#searchTerm = res.searchedFor\n    res.items.forEach((item) => { files.push(item) })\n    this.plugin.setPluginState({ isInputMode: false, files })\n  }\n\n  search (query) {\n    if (query && query === this.#searchTerm) {\n      // no need to search again as this is the same as the previous search\n      this.plugin.setPluginState({ isInputMode: false })\n      return\n    }\n\n    return this.sharedHandler.loaderWrapper(\n      this.provider.search(query),\n      (res) => {\n        this.#updateFilesAndInputMode(res, [])\n      },\n      this.handleError,\n    )\n  }\n\n  triggerSearchInput () {\n    this.plugin.setPluginState({ isInputMode: true })\n  }\n\n  async handleScroll (event) {\n    const query = this.nextPageQuery || null\n\n    if (this.shouldHandleScroll(event) && query) {\n      this.isHandlingScroll = true\n\n      try {\n        const response = await this.provider.search(this.#searchTerm, query)\n        const { files } = this.plugin.getPluginState()\n\n        this.#updateFilesAndInputMode(response, files)\n      } catch (error) {\n        this.handleError(error)\n      } finally {\n        this.isHandlingScroll = false\n      }\n    }\n  }\n\n  donePicking () {\n    const { currentSelection } = this.plugin.getPluginState()\n    const promises = currentSelection.map((file) => this.addFile(file))\n\n    this.sharedHandler.loaderWrapper(Promise.all(promises), () => {\n      this.clearSelection()\n    }, () => {})\n  }\n\n  render (state, viewOptions = {}) {\n    const { didFirstRender, isInputMode } = this.plugin.getPluginState()\n\n    if (!didFirstRender) {\n      this.preFirstRender()\n    }\n\n    const targetViewOptions = { ...this.opts, ...viewOptions }\n    const { files, folders, filterInput, loading, currentSelection } = this.plugin.getPluginState()\n    const { isChecked, toggleCheckbox, filterItems } = this.sharedHandler\n    const hasInput = filterInput !== ''\n\n    const browserProps = {\n      isChecked,\n      toggleCheckbox,\n      currentSelection,\n      files: hasInput ? filterItems(files) : files,\n      folders: hasInput ? filterItems(folders) : folders,\n      handleScroll: this.handleScroll,\n      done: this.donePicking,\n      cancel: this.cancelPicking,\n      headerComponent: Header({\n        triggerSearchInput: this.triggerSearchInput,\n        i18n: this.plugin.uppy.i18n,\n      }),\n      title: this.plugin.title,\n      viewType: targetViewOptions.viewType,\n      showTitles: targetViewOptions.showTitles,\n      showFilter: targetViewOptions.showFilter,\n      showBreadcrumbs: targetViewOptions.showBreadcrumbs,\n      pluginIcon: this.plugin.icon,\n      i18n: this.plugin.uppy.i18n,\n      uppyFiles: this.plugin.uppy.getFiles(),\n      validateRestrictions: (...args) => this.plugin.uppy.validateRestrictions(...args),\n    }\n\n    if (loading) {\n      return (\n        <CloseWrapper onUnmount={this.clearSelection}>\n          <LoaderView i18n={this.plugin.uppy.i18n} />\n        </CloseWrapper>\n      )\n    }\n\n    if (isInputMode) {\n      return (\n        <CloseWrapper onUnmount={this.clearSelection}>\n          <SearchInput\n            search={this.search}\n            i18n={this.plugin.uppy.i18n}\n          />\n        </CloseWrapper>\n      )\n    }\n\n    return (\n      <CloseWrapper onUnmount={this.clearSelection}>\n        <Browser {...browserProps} />\n      </CloseWrapper>\n    )\n  }\n}\n"]}